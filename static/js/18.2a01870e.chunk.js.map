{"version":3,"sources":["views/Notifications/index.js"],"names":["index","connect","state","list","notifications","isLoading","markNotificationAsReadyById","markAllAsRead","getNotification","this","props","console","log","title","bordered","extra","disabled","every","item","hasRead","onClick","spinning","itemLayout","dataSource","renderItem","Item","bind","id","Meta","href","dot","description","desc","Component"],"mappings":"qSAgBOA,EADNC,aATkB,SAAAC,GAEX,MAAO,CACHC,KAAMD,EAAME,cAAcD,KAC1BE,UAAWH,EAAME,cAAcC,aAKzB,CAACC,gCAA4BC,kBAAcC,qB,+LAKzDC,KAAKC,MAAMF,oB,+BAEH,IAAD,OAGP,OADEG,QAAQC,IAAIH,KAAKC,MAAML,WAEvB,uBACEQ,MAAM,eACNC,UAAU,EACVC,MAAO,uBAAQC,SAAUP,KAAKC,MAAMP,KAAKc,OAAM,SAAAC,GAAI,OAAiB,IAAfA,EAAKC,WAAiBC,QAASX,KAAKC,MAAMH,eAAxF,aAEL,uBAAMc,SAAUZ,KAAKC,MAAML,WAC7B,uBACEiB,WAAW,aACXC,WAAYd,KAAKC,MAAMP,KACvBqB,WAAY,SAACN,GAAD,OACV,sBAAMO,KAAN,CAAWV,MAAOG,EAAKC,QAAQ,KAAK,uBAAQC,QAAS,EAAKV,MAAMJ,4BAA4BoB,KAAK,EAAKR,EAAKS,KAAvE,WAClC,sBAAMF,KAAKG,KAAX,CAIEf,MAAO,uBAAGgB,KAAK,sBAAqB,uBAAOC,KAAMZ,EAAKC,SAAUD,EAAKL,QACrEkB,YAAab,EAAKc,iB,GA1BbC,e,EAoCLjC","file":"static/js/18.2a01870e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, Button,List,Avatar,Badge ,Spin} from \"antd\";\r\nimport {connect} from 'react-redux'\r\nimport {markNotificationAsReadyById,markAllAsRead,getNotification} from '../../actions/notification'\r\n\r\n\r\n    const mapState=state=>{\r\n\r\n        return {\r\n            list: state.notifications.list,\r\n            isLoading: state.notifications.isLoading\r\n        }\r\n    }\r\n\r\n\r\n@connect(mapState,{markNotificationAsReadyById,markAllAsRead,getNotification})\r\n class index extends Component {\r\n \r\n   \r\ncomponentDidMount(){\r\n    this.props.getNotification()\r\n}\r\n  render() {\r\n    //   console.log('props',this.props)\r\n      console.log(this.props.isLoading  )\r\n    return (\r\n      <Card\r\n        title=\"Notification\"\r\n        bordered={false}\r\n        extra={<Button disabled={this.props.list.every(item=>item.hasRead===true)} onClick={this.props.markAllAsRead}>read all</Button>}\r\n      >\r\n          <Spin spinning={this.props.isLoading}>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={this.props.list}\r\n          renderItem={(item) => (\r\n            <List.Item extra={item.hasRead?null:<Button onClick={this.props.markNotificationAsReadyById.bind(this,item.id)}>finish</Button>}>\r\n              <List.Item.Meta\r\n                // avatar={\r\n                //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                // }\r\n                title={<a href=\"https://ant.design\"><Badge dot={!item.hasRead}>{item.title}</Badge></a>}\r\n                description={item.desc}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        </Spin>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n export default index"],"sourceRoot":""}