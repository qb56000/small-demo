{"version":3,"sources":["views/Article/Edit.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","Edit","withRouter","back","props","history","push","editor","createRef","formRef","state","isloading","console","log","this","match","params","id","getArticle","then","resp","createAt","moment","current","setFieldsValue","texteditor","E","customConfig","onchange","html","content","create","txt","finally","setState","title","bordered","extra","onClick","spinning","name","initialValues","remember","onFinish","values","data","Object","assign","valueOf","modifyArticle","catch","success","onFinishFailed","errorInfo","ref","Item","label","rules","required","message","pattern","onChange","date","dateString","dateFormat","className","type","htmlType","Component"],"mappings":"oXAWMA,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAI3BI,EADLC,Y,cAEC,aAAc,IAAD,8BACX,+CAkKFC,KAAO,WACL,EAAKC,MAAMC,QAAQC,KAAK,mBAlKxB,EAAKC,OAAOC,sBACZ,EAAKC,QAAUD,sBACf,EAAKE,MAAM,CACTC,WAAU,GALD,E,iFASO,IAAD,OACjBC,QAAQC,IAAIC,KAAKV,MAAMW,MAAMC,OAAOC,IACpCC,YAAWJ,KAAKV,MAAMW,MAAMC,OAAOC,IAAIE,MAAK,SAAAC,GAC1CA,EAAKC,SAASC,IAAOF,EAAKC,UAC1BT,QAAQC,IAAIO,EAAKC,UACjB,EAAKZ,QAAQc,QAAQC,eAAeJ,GACpC,IAAIK,EAAa,IAAIC,IAAE,EAAKnB,OAAOgB,SACnCE,EAAWE,aAAaC,SAAY,SAACC,GACnC,EAAKpB,QAAQc,QAAQC,eAAe,CACxCM,QAAQD,KAGNJ,EAAWM,SACXN,EAAWO,IAAIH,KAAKT,EAAKU,YACxBG,SAAQ,WACT,EAAKC,SAAS,CACZvB,WAAU,S,+BAKN,IAAD,OAsBP,OACE,uBACEwB,MAAM,UACNC,UAAU,EACVC,MAAO,uBAAQC,QAASxB,KAAKX,MAAtB,SAEP,uBAAMoC,SAAUzB,KAAKJ,MAAMC,WAC7B,uCACIhB,EADJ,CAEA6C,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZC,SAlCe,SAAAC,GACf,IAAMC,EAAMC,OAAOC,OAAO,GAAGH,EAAO,CAClCvB,SAASuB,EAAOvB,SAAS2B,YAE3BpC,QAAQC,IAAI,WAAYgC,GAExBI,YAAc,EAAK7C,MAAMW,MAAMC,OAAOC,GAAG4B,GAAM1B,MAAK,SAAAC,GAClDR,QAAQC,IAAIO,MACX8B,QAAQjB,SAAQ,WACjB,IAAQkB,QAAQ,2BA0BlBC,eAtBqB,SAAAC,GACrBzC,QAAQC,IAAI,UAAWwC,IAsBvBC,IAAKxC,KAAKL,UAGV,sBAAM8C,KAAN,CACEC,MAAM,QACNhB,KAAK,QACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAUb,6BAGF,sBAAMJ,KAAN,CACEC,MAAM,SACNhB,KAAK,SACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAIZ,6BAEH,sBAAMJ,KAAN,CACEC,MAAM,iBACNhB,KAAK,SACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAEX,CACEC,QAAQ,sBACRD,QAAS,0BAKZ,6BAGH,sBAAMJ,KAAN,CACEC,MAAM,OACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,uBAIX,uBAAYE,SAjFL,SAACC,EAAMC,KAiFkBC,WAxIvB,gBA0Ib,sBAAMT,KAAN,CACEC,MAAM,UACNhB,KAAK,UACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0BAKf,yBAAK1C,GAAG,SAASqC,IAAKxC,KAAKP,OAAQ0D,UAAU,YAU7C,sBAAMV,KAASxD,EACb,uBAAQmE,KAAK,UAAUC,SAAS,UAAhC,kB,GA1JWC,e,EAwKJnE,a","file":"static/js/14.29bf59bc.chunk.js","sourcesContent":["import React, { Component,createRef } from \"react\";\r\nimport { Card, Button, Form, Input, Checkbox,DatePicker,message,Spin} from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport E from 'wangeditor'\r\nimport './Edit.less'\r\nimport {getArticle} from '../../requests/index'\r\nimport moment from 'moment'\r\nimport {modifyArticle} from '../../requests/index'\r\n\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 2 },\r\n  wrapperCol: { span: 10 }\r\n};\r\nconst dateFormat = 'YYYY/MM/DD';\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 1, span: 10 }\r\n};\r\n\r\n@withRouter\r\nclass Edit extends Component {\r\n  constructor(){\r\n    super()\r\n    this.editor=createRef()\r\n    this.formRef = createRef();\r\n    this.state={\r\n      isloading:true\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.match.params.id)\r\n    getArticle(this.props.match.params.id).then(resp=>{\r\n      resp.createAt=moment(resp.createAt)\r\n      console.log(resp.createAt)\r\n      this.formRef.current.setFieldsValue(resp)\r\n      let texteditor = new E(this.editor.current)\r\n      texteditor.customConfig.onchange =  (html)=> {\r\n        this.formRef.current.setFieldsValue({\r\n    content:html\r\n    })\r\n    }\r\n      texteditor.create()\r\n      texteditor.txt.html(resp.content)\r\n    }).finally(()=>{\r\n      this.setState({\r\n        isloading:false\r\n      })\r\n\r\n    })\r\n  }\r\n  render() {\r\n    const onFinish = values => {\r\n      const data= Object.assign({},values,{\r\n        createAt:values.createAt.valueOf()\r\n      })\r\n      console.log(\"Success:\", data);\r\n\r\n      modifyArticle(this.props.match.params.id,data).then(resp=>{\r\n        console.log(resp)\r\n      }).catch().finally(()=>{\r\n        message.success('modify successfully')\r\n      })\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    let onChange=(date, dateString)=>{\r\n      // console.log(date, dateString)\r\n    }\r\n\r\n    return (\r\n      <Card\r\n        title=\"article\"\r\n        bordered={false}\r\n        extra={<Button onClick={this.back}>back</Button>}\r\n      >\r\n        <Spin spinning={this.state.isloading}>\r\n      <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      ref={this.formRef}\r\n      \r\n    >\r\n      <Form.Item\r\n        label=\"Title\"\r\n        name=\"title\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n            \r\n          }\r\n          // ,\r\n          // {\r\n          //   pattern:/[0-9a-z]/,\r\n          //   message: 'Please input 0-9!'\r\n          // }\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Author\"\r\n        name=\"author\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n         <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Reading Amount\"\r\n        name=\"amount\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input  reading amount!',\r\n          },\r\n          {\r\n            pattern:/^[0-9]*(\\.[0-9]*)?$/,\r\n            message: 'Please input number!' ,\r\n\r\n          }\r\n        ]}\r\n      >\r\n         <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Date\"\r\n        name=\"createAt\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input date',\r\n          },\r\n        ]}\r\n      >\r\n          <DatePicker onChange={onChange} dateFormat={dateFormat} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Content\"\r\n        name=\"content\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input content',\r\n          },\r\n        ]}\r\n      >\r\n\r\n      <div id=\"editor\" ref={this.editor} className='editor'>\r\n      </div>\r\n      </Form.Item>\r\n\r\n\r\n\r\n      {/* <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item> */}\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Spin>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/admin/article\");\r\n  };\r\n}\r\nexport default Edit;\r\n"],"sourceRoot":""}